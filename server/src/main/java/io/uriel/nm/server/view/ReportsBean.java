/*
 * Copyright 2013 Thiago Uriel M. Garcia
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.uriel.nm.server.view;

import io.uriel.nm.server.business.SubscriptionServices;

import javax.annotation.PostConstruct;

import org.primefaces.model.chart.PieChartModel;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;

@Controller
@Scope("view")
public class ReportsBean extends AbstractManagedBean
{
    /** Serialization constant generated by JVM. */
    private static final long serialVersionUID = 1786219971519485761L;

    /** Chart model used to represent platforms in a pie. */ 
    private PieChartModel pieModel;
 
    /** Service used to manage subscriptions. */
    @Autowired
    private SubscriptionServices subscriptionService;
    
    /**
     * Initializes any initial content for this managed bean.
     * <p>
     * It's invoked as a post construct element, so it's called by the context.
     * It runs after initialization and dependency injection.  
     */
    @PostConstruct
    public void initialize()
    {
        updatePieModel();
    }
    
    /**
     * Updates internal counters for the Pie Chart displaying current devices.
     */
    public void updatePieModel()
    {
        final long[] counters = subscriptionService.countDevicesByPlatform();
        pieModel = new PieChartModel();  
        pieModel.set("Android", counters[0]);  
        pieModel.set("iOS", counters[1]);  
        pieModel.set("Windows Phone", counters[2]);
    }
}
