<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" 
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:c="http://java.sun.com/jstl/core"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:p="http://primefaces.org/ui"
      xmlns:ui="http://java.sun.com/jsf/facelets">
<h:head>
    <title><h:outputText value="#{msg['application.title']}"/></title>
    <script type="text/javascript">
    //<![CDATA[
        /**
         * Requests an update for all visual elements, displaying subscriptions
         * currently stored in backend server's persistence. It's triggered by
         * the WebSocket channel, whenever a message arrives in this page.
         *
         * @param facesMessage
         *      Message received from the WebSocket channel. Contents received
         *      are literal, which means they are not wrapped by the engine.
         */
        function updateSubscriptions(facesMessage)
        {
        	updateDevicesAsync();
        }
    //]]>
    </script>
</h:head>
<h:body>
    <h:form id="tableForm">
        <div id="container">
            <ui:remove>
                Datatable containing all subscriptions currently stored in backend.
                It is updated after a WebSocket message or removing items explicitly.                 
            </ui:remove>
            <p:dataTable 
                id="deviceTable"
                lazy="true"
                var="device" 
                selectionMode="multiple"
                selection="#{subscriptionsBean.currentDevices}"
                paginator="true" 
                rows="10"
                sortBy="registryDate"
                sortOrder="descending"
                value="#{subscriptionsBean.subscriptions}"
                emptyVarMessage="#{msg['subscription.table.nothingToShow']}" 
                rowsPerPageTemplate="10,20,40"
                paginatorTemplate="{RowsPerPageDropdown} {FirstPageLink} {PreviousPageLink} {CurrentPageReport} {NextPageLink} {LastPageLink}" >
                <f:facet name="header">  
                    <h:outputText value="#{msg['subscription.table.title']}"/>
                </f:facet> 
                <p:column headerText="#{msg['subscription.table.owner']}" sortBy="ownerName" width="25%">  
                    <h:outputText value="#{device.ownerName}" />  
                </p:column>  
                <p:column headerText="#{msg['subscription.table.platform']}" sortBy="osName" width="25%">  
                    <h:outputText value="#{device.osName}" />, 
                    <h:outputText value="#{device.osVersion}" />
                </p:column>  
                <p:column headerText="#{msg['subscription.table.registryDate']}" sortBy="registryDate" width="25%">
                    <h:outputText value="#{device.registryDate}">  
                        <f:convertDateTime 
                            type="both" 
                            dateStyle="short"
                            locale="#{subscriptionsBean.locale}"
                            timeZone="#{subscriptionsBean.timeZone}" />  
                    </h:outputText> 
                </p:column>  
                <p:column headerText="#{msg['subscription.table.options']}" width="25%">
                    <div style="text-align: center">  
                        <p:commandButton 
                            id="btnNotify" 
                            onclick="PF('dlgNotify').show()"
                            icon="ui-icon-mail-closed" 
                            title="#{msg['subscription.btn.notify']}"
                            actionListener="#{subscriptionsBean.setCurrentDevice(device)}" />  
                        <p:commandButton 
                            id="btnDetails" 
                            icon="ui-icon-search" 
                            title="#{msg['subscription.btn.details']}"/>
                        <p:commandButton 
                            id="btnUnsubscribe"
                            update="deviceTable" 
                            icon="ui-icon-trash"
                            ajax="true"
                            title="#{msg['subscription.btn.unsubscribe']}"
                            actionListener="#{subscriptionsBean.unsubscribe(device.deviceId)}" />
                    </div>
                </p:column>
                <f:facet name="footer">
                    <c:choose>
                        <c:when test="#{subscriptionsBean.subscriptions.rowCount == 1}">
                            <h:outputFormat value="#{msg['subscription.table.countSingular']}">
                                <f:param value="#{subscriptionsBean.subscriptions.rowCount}"/>
                            </h:outputFormat>  
                        </c:when>
                        <c:otherwise>
                            <h:outputFormat value="#{msg['subscription.table.countPlural']}">
                                <f:param value="#{subscriptionsBean.subscriptions.rowCount}"/>
                            </h:outputFormat>  
                        </c:otherwise>
                    </c:choose>
                </f:facet>                
                <p:ajax event="rowSelect" listener="#{subscriptionsBean.checkMultipleSelection}" update="@form:pnMultipleControls" /> 
                <p:ajax event="rowUnselect" listener="#{subscriptionsBean.checkMultipleSelection}" update="@form:pnMultipleControls" />
            </p:dataTable>
        </div>
        <p:outputPanel id="pnMultipleControls" layout="block">
            <p:commandButton 
                id="btnBroadcast" 
                icon="ui-icon-mail-closed" 
                title="#{msg['subscription.btn.broadcast']}"
                rendered="#{subscriptionsBean.multipleSelection}" />
            <p:commandButton 
                id="btnRemoveAll" 
                icon="ui-icon-trash" 
                title="#{msg['subscription.btn.unsubscribeAll']}"
                rendered="#{subscriptionsBean.multipleSelection}" />
        </p:outputPanel>            
        <p:remoteCommand 
            name="updateDevicesAsync" 
            update="deviceTable" />
    </h:form>
    <ui:remove>
        Dialog shown to allow the user to send a push notification to a selected
        number of devices (or just a specific one). The dialog is modal.                 
    </ui:remove>
    <p:dialog 
        header="#{msg['subscription.dialog.title']}" 
        widgetVar="dlgNotify" 
        resizable="false"
        modal="true">  
        <h:form id="dialogForm">
            <p:inputTextarea 
                value="#{subscriptionsBean.messageToPush}"
                rows="5" 
                cols="30" 
                counter="counter" 
                maxlength="250"       
                counterTemplate="{0} #{msg['subscription.dialog.remaining']}" 
                autoResize="false"/>
            <br/>
            <h:outputText id="counter" />
            <p/>
            <div style="text-align: center">
                <p:commandButton 
                    id="submitButton" 
                    icon="ui-icon-mail-closed"
                    ajax="true"
                    value="#{msg['subscription.btn.notify']}"
                    oncomplete="PF('dlgNotify').hide();"
                    actionListener="#{subscriptionsBean.pushNotification}"/>
            </div>
        </h:form>  
    </p:dialog>
    <ui:remove>
        Socket component that uses WebSocket (or falls back to Comet) to receive
        updates about the subscription table. Channel does not considers Servlet
        mapping defined for the Push Servlet in web.xml.                 
    </ui:remove>    
    <p:socket 
        onMessage="updateSubscriptions" 
        channel="/subscriptions" 
        autoConnect="true" />
</h:body>
</html>