<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" 
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:p="http://primefaces.org/ui">
<h:head>
    <title><h:outputText value="#{msg['application.title']}"/></title>
    <script type="text/javascript">
    //<![CDATA[
        /**
         * Requests an update for all visual elements, displaying subscriptions
         * currently stored in backend server's persistence. It's triggered by
         * the WebSocket channel, whenever a message arrives in this page.
         *
         * @param facesMessage
         *      Message received from the WebSocket channel. Contents received
         *      are literal, which means they are not wrapped by the engine.
         */
        function updateSubscriptions(facesMessage)
        {
        	updateDevicesAsync();
        }
    //]]>
    </script>
</h:head>
<h:body>
    <h:form id="tableForm">
        <div id="container">
            <ui:remove>
                Datatable containing all subscriptions currently stored in backend.
                It is updated after a WebSocket message or removing items explicitly.                 
            </ui:remove>
            <p:dataTable 
                id="deviceTable"
                var="device" 
                value="#{subscriptionsBean.subscriptions}" >
                <p:column headerText="#{msg['subscription.table.owner']}">  
                    <h:outputText value="#{device.ownerName}" />  
                </p:column>  
                <p:column headerText="#{msg['subscription.table.platform']}">  
                    <h:outputText value="#{device.osName}" />  
                    <h:outputText value="#{device.osVersion}" />
                </p:column>  
                <p:column headerText="#{msg['subscription.table.registryDate']}">  
                    <h:outputText value="#{device.registryDate}" />  
                </p:column>  
                <p:column headerText="#{msg['subscription.table.options']}">  
                    <p:commandButton 
                        id="btnNotify" 
                        onclick="PF('dlgNotify').show()"
                        icon="ui-icon-mail-closed" 
                        title="#{msg['subscription.btn.notify']}"
                        actionListener="#{subscriptionsBean.setCurrentDeviceId(device.deviceId)}" />  
                    <p:commandButton 
                        id="btnDetails" 
                        icon="ui-icon-search" 
                        title="#{msg['subscription.btn.details']}"/>
                    <p:commandButton 
                        id="btnUnsubscribe"
                        update="deviceTable" 
                        icon="ui-icon-trash"
                        ajax="true"
                        title="#{msg['subscription.btn.unsubscribe']}"
                        actionListener="#{subscriptionsBean.unsubscribe(device.deviceId)}" />
                </p:column>
            </p:dataTable>
        </div>
        <p:remoteCommand 
            name="updateDevicesAsync" 
            update="deviceTable" />
    </h:form>
    <ui:remove>
        Dialog shown to allow the user to send a push notification to a selected
        number of devices (or just a specific one). The dialog is modal.                 
    </ui:remove>
    <p:dialog 
        header="#{msg['subscription.dialog.title']}" 
        widgetVar="dlgNotify" 
        resizable="false"
        modal="true">  
        <h:form id="dialogForm">  
            <p:inputTextarea 
                value="#{subscriptionsBean.messageToPush}"
                rows="5" 
                cols="30" 
                counter="counter" 
                maxlength="250"       
                counterTemplate="{0} #{msg['subscription.dialog.remaining']}" 
                autoResize="false"/>
            <br/>
            <h:outputText id="counter" />
            <br/>
            <div style="text-align: center">
                <p:commandButton 
                    id="submitButton" 
                    icon="ui-icon-mail-closed"
                    ajax="true"
                    value="#{msg['subscription.btn.notify']}"
                    oncomplete="PF('dlgNotify').hide();"
                    actionListener="#{subscriptionsBean.pushNotification}"/>
            </div>
        </h:form>  
    </p:dialog>
    <p:socket 
        onMessage="updateSubscriptions" 
        channel="/subscriptions" 
        autoConnect="true" />
</h:body>
</html>